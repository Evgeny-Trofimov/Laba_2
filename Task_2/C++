#include <iostream>
#include <unordered_map>
#include <string>

int romanToInt(const std::string& s) {
    // Создаем карту для значений римских цифр
    std::unordered_map<char, int> romanValues = {
        {'I', 1},
        {'V', 5},
        {'X', 10},
        {'L', 50},
        {'C', 100},
        {'D', 500},
        {'M', 1000}
    };

    int total = 0;
    int prevValue = 0;

    // Проходим по строке римского числа справа налево
    for (int i = s.length() - 1; i >= 0; --i) {
        char currentChar = s[i];
        int currentValue = romanValues[currentChar];

        // Если текущее значение меньше предыдущего, вычитаем его
        if (currentValue < prevValue) {
            total -= currentValue;
        } else {
            // Иначе добавляем значение
            total += currentValue;
        }

        // Обновляем предыдущее значение
        prevValue = currentValue;
    }

    return total;
}

int main() {
    std::string romanNumber;
    std::cout << "Введите римское число: ";
    std::cin >> romanNumber;

    int result = romanToInt(romanNumber);
    std::cout << "Натуральное число: " << result << std::endl;

    return 0;
}

